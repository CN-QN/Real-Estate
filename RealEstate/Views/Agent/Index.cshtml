@model RealEstate.Models.ViewModels.PostFormVM
@{
    ViewBag.Title = "Đăng tin mới";
    Layout = "~/Views/Shared/_LayoutAgent.cshtml";
}
<h3 class="fw-bold mb-3">Đăng tin mới</h3>

@using (Html.BeginForm("ThemMoiDanhSach", "Agent", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    if (ViewBag.Thongbao != null)
    {
        <div class="alert alert-warning">@ViewBag.Thongbao</div>
    }

    <div class="card p-3 mb-3">
        <div class="row">
            <div class="col-md-6 mb-3">
                @Html.LabelFor(m => m.ProjectName)
                @Html.TextBoxFor(m => m.ProjectName, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.ProjectName, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-3 mb-3">
                @Html.LabelFor(m => m.TransactionType)
                @Html.DropDownListFor(m => m.TransactionType,
                    new SelectList(new[] {
                        new {v="Sell", t="Bán"},
                        new {v="Rent", t="Cho thuê"}
                    }, "v", "t", Model?.TransactionType),
                    "-- Chọn --", new { @class = "form-select" })
                @Html.ValidationMessageFor(m => m.TransactionType, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-3 mb-3">
                @Html.LabelFor(m => m.PropertyType)
                @Html.DropDownListFor(m => m.PropertyType,
                    new SelectList(new[] {
                        new {v="Apartment", t="Căn hộ"},
                        new {v="House", t="Nhà ở"},
                        new {v="Land", t="Đất"},
                        new {v="Office", t="Văn phòng"}
                    }, "v", "t", Model?.PropertyType),
                    "-- Chọn --", new { @class = "form-select" })
                @Html.ValidationMessageFor(m => m.PropertyType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="mb-3">
            @Html.LabelFor(m => m.Title)
            @Html.TextBoxFor(m => m.Title, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Title, "", new { @class = "text-danger" })
        </div>

        <div class="mb-3">
            @Html.LabelFor(m => m.Description)
            @Html.TextAreaFor(m => m.Description, 8, 0, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Description, "", new { @class = "text-danger" })
        </div>

        <div class="row">
            <div class="col-md-4 mb-3">
                <label>Tỉnh/Thành</label>
                @Html.DropDownListFor(m => m.ProvinceCode,
                    (IEnumerable<SelectListItem>)ViewBag.Provinces,
                    "-- Chọn tỉnh/thành --",
                    new { @class = "form-select", id = "ProvinceCode" })
                @Html.ValidationMessageFor(m => m.ProvinceCode, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-4 mb-3">
                <label>Quận/Huyện</label>
                @Html.DropDownListFor(m => m.DistrictCode,
                    (IEnumerable<SelectListItem>)ViewBag.Districts,
                    "-- Chọn quận/huyện --",
                    new { @class = "form-select", id = "DistrictCode" })
                @Html.ValidationMessageFor(m => m.DistrictCode, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-4 mb-3">
                <label>Phường/Xã</label>
                @Html.DropDownListFor(m => m.WardCode,
                    (IEnumerable<SelectListItem>)ViewBag.Wards,
                    "-- Chọn phường/xã --",
                    new { @class = "form-select", id = "WardCode" })
                @Html.ValidationMessageFor(m => m.WardCode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row">
            <div class="col-md-6 mb-3">
                @Html.LabelFor(m => m.StreetName)
                @Html.TextBoxFor(m => m.StreetName, new { @class = "form-control" })
            </div>
            <div class="col-md-6 mb-3">
                @Html.LabelFor(m => m.AddressText)
                @Html.TextBoxFor(m => m.AddressText, new { @class = "form-control" })
            </div>
        </div>

        <div class="row">
            <div class="col-md-3 mb-3">
                @Html.LabelFor(m => m.Direction)
                @Html.TextBoxFor(m => m.Direction, new { @class = "form-control" })
            </div>
            <div class="col-md-3 mb-3">
                @Html.Label("Giá min (VNĐ)")
                @Html.TextBoxFor(m => m.PriceMin, new { @type = "number", step = "0.01", @class = "form-control" })
            </div>
            <div class="col-md-3 mb-3">
                @Html.Label("Giá max (VNĐ)")
                @Html.TextBoxFor(m => m.PriceMax, new { @type = "number", step = "0.01", @class = "form-control" })
            </div>
            <div class="col-md-3 mb-3">
                @Html.Label("Diện tích min (m²)")
                @Html.TextBoxFor(m => m.AreaMin, new { @type = "number", step = "0.01", @class = "form-control" })
            </div>
        </div>

        <div class="card p-3 mb-3">
            <div class="mb-2">Ảnh (nhiều ảnh)</div>
            <div id="dz" class="border rounded p-3 text-center mb-3" style="cursor:pointer;">
                Kéo & thả ảnh vào đây hoặc bấm để chọn
                <input id="fileInput-0" type="file" name="ImageFiles" multiple accept="image/*" class="d-none" />
            </div>
            <div class="mb-2">
                <button type="button" id="btnAddMore" class="btn btn-outline-secondary btn-sm">Thêm lần chọn ảnh</button>
                <small class="text-muted ms-2">Tối đa 20 ảnh, ≤ 10MB/ảnh</small>
            </div>
            <div id="preview" class="row g-2"></div>
        </div>
    </div>

    <button type="submit" class="btn btn-primary px-4">Đăng tin</button>
}

@section scripts{
    <script>
(function(){
  const maxFiles = 20;
  const maxSize  = 10 * 1024 * 1024;
  const allowed  = ["image/jpeg","image/png","image/gif","image/webp"];
  const dz       = document.getElementById("dz");
  const preview  = document.getElementById("preview");
  const addBtn   = document.getElementById("btnAddMore");

  let inputCount = 1;
  const inputs = [document.getElementById("fileInput-0")];

  const createInput = () => {
    const id = `fileInput-${inputCount++}`;
    const inp = document.createElement("input");
    inp.type = "file";
    inp.name = "ImageFiles";
    inp.accept = "image/*";
    inp.multiple = true;
    inp.className = "d-none";
    document.forms[0].appendChild(inp);
    bindInput(inp);
    inputs.push(inp);
    return inp;
  };

  const bindInput = (inp) => {
    inp.addEventListener("change", () => {
      renderFromFileList(inp);
      validateTotal();
    });
  };
  bindInput(inputs[0]);

  const renderFromFileList = (inp) => {
    [...inp.files].forEach((file) => {
      if (!allowed.includes(file.type) || file.size > maxSize) return;
      const col = document.createElement("div");
      col.className = "col-6 col-md-3";
      const card = document.createElement("div");
      card.className = "position-relative border rounded overflow-hidden";
      const img = document.createElement("img");
      img.className = "w-100";
      img.style.aspectRatio = "1/1";
      img.style.objectFit = "cover";
      img.src = URL.createObjectURL(file);
      const rm = document.createElement("button");
      rm.type = "button";
      rm.className = "btn btn-sm btn-danger position-absolute";
      rm.style.top = "6px"; rm.style.right = "6px";
      rm.textContent = "×";
      rm.onclick = () => {
        removeOneFileFromInput(inp, file);
        col.remove();
      };
      card.appendChild(img); card.appendChild(rm); col.appendChild(card);
      preview.appendChild(col);
    });
  };

  const removeOneFileFromInput = (inp, fileToRemove) => {
    const dt = new DataTransfer();
    [...inp.files].forEach(f => { if (f !== fileToRemove) dt.items.add(f); });
    inp.files = dt.files;
    validateTotal();
  };

  const getTotalFiles = () => inputs.reduce((sum, i) => sum + i.files.length, 0);

  const validateTotal = () => {
    const total = getTotalFiles();
    if (total > maxFiles) {
      alert(`Vượt quá ${maxFiles} ảnh. Hãy bớt ảnh trước khi gửi.`);
    }
  };

  dz.addEventListener("click", () => inputs[0].click());

  dz.addEventListener("dragover", (e) => { e.preventDefault(); dz.classList.add("bg-light"); });
  dz.addEventListener("dragleave", () => dz.classList.remove("bg-light"));
  dz.addEventListener("drop", (e) => {
    e.preventDefault(); dz.classList.remove("bg-light");
    const inp = inputs[0];
    const dt = new DataTransfer();
    [...inp.files].forEach(f => dt.items.add(f));
    [...e.dataTransfer.files].forEach(f => dt.items.add(f));
    inp.files = dt.files;
    renderFromFileList(inp);
    validateTotal();
  });

  addBtn.addEventListener("click", () => {
    const inp = createInput();
    inp.click();
  });

  $("#ProvinceCode").change(function () {
      var code = $(this).val();
      $("#DistrictCode").empty().append($("<option>").val("").text("-- Chọn quận/huyện --"));
      $("#WardCode").empty().append($("<option>").val("").text("-- Chọn phường/xã --"));
      if (!code) return;
      $.getJSON("@Url.Action("Districts","Agent")", { provinceCode: code }, function (rs) {
          $.each(rs, function (_, d) {
              $("#DistrictCode").append($("<option>").val(d.code).text(d.name));
          });
      });
  });
  $("#DistrictCode").change(function () {
      var code = $(this).val();
      $("#WardCode").empty().append($("<option>").val("").text("-- Chọn phường/xã --"));
      if (!code) return;
      $.getJSON("@Url.Action("Wards","Agent")", { districtCode: code }, function (rs) {
          $.each(rs, function (_, w) {
              $("#WardCode").append($("<option>").val(w.code).text(w.name));
          });
      });
  });
})();
    </script>
}
